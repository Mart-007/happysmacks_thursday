final File imagesDir = new File(getFilesDir(), "images");
    imagesDir.mkdirs();
    LinearLayout ImageContainer = (LinearLayout) kl.findViewById(R.id.imageContainer);

    LinearLayout ImageContainerColumn = (LinearLayout) getLayoutInflater().inflate(R.layout.image_container_column, ImageContainer, false);

    for (int i = 0; i < rawFiles.length; i++) {
      System.out.println(i);
      if ((i % 2) == 0) {
        ImageContainerColumn = (LinearLayout) getLayoutInflater().inflate(R.layout.image_container_column, ImageContainer, false);
      }
      ImageButton ImgButton = (ImageButton) getLayoutInflater().inflate(R.layout.image_button, ImageContainerColumn, false);
      ImgButton.setImageResource(getResources().getIdentifier(rawFiles[i], "raw", getPackageName()));
      ImgButton.setTag(rawFiles[i]);

      ImgButton.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View view) {
          String emojiName = view.getTag().toString().replaceAll("_", "-");

          try {
            final File file = getFileForResource(HappySmacksKeyboard.this, getResources().getIdentifier(view.getTag().toString(), "raw", getPackageName()), imagesDir, "image.png");

            HappySmacksKeyboard.this.commitImage("A ${emojiName} logo", MIME_TYPE_PNG, file);
          } catch (Exception e) {
            System.out.println(e.toString());
          }


        }
      });
      ImageContainerColumn.addView(ImgButton);

      if ((i % 2) == 0) {
        ImageContainer.addView(ImageContainerColumn);
      }
    }